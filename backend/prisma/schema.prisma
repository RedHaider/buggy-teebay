generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  address      String
  phone_number String
  first_name   String?
  last_name    String?
  password     String
  products     Product[]
  transactions Transactions[] @relation("UserTransactions")

  @@unique([first_name, last_name, email, password])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products CategoryToProduct[]
}

model Product {
  id             Int            @id @default(autoincrement())
  title          String
  description    String?
  purchase_price Float
  rent_price     Float
  rent_duration  String
  ownerId        Int
  owner          User           @relation(fields: [ownerId], references: [id])
  categories     CategoryToProduct[]
  transactions   Transactions[]
}

model CategoryToProduct {
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int

  @@id([productId, categoryId])
}

enum TransactionStatus {
  RENTED
  LENT
  SOLD
  BOUGHT
}

model Transactions {
  id          Int               @id @default(autoincrement())
  status      TransactionStatus
  createdAt   DateTime          @default(now())
  product     Product           @relation(fields: [productId], references: [id])
  productId   Int
  user        User?             @relation("UserTransactions", fields: [userId], references: [id])
  userId      Int?
  rentalStart String?           @default(dbgenerated())
  rentalEnd   String?           @default(dbgenerated())
}
